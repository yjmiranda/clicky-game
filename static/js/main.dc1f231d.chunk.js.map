{"version":3,"sources":["components/Navbar/index.js","components/Character/index.js","App.js","index.js"],"names":["Navbar","props","className","messageColor","message","score","topScore","Character","alt","name","src","image","onClick","handleClick","id","App","useState","clicked","setClicked","text","textColor","setMessage","setScore","setTopScore","includes","array","push","number","i","length","j","Math","floor","random","temp","shuffleCharacters","southpark","map","character","key","ReactDOM","render","document","getElementById"],"mappings":"ozEAaeA,MAVf,SAAgBC,GACZ,OACI,yBAAKC,UAAU,kCACX,6CACA,0BAAMA,UAAWD,EAAME,cAAeF,EAAMG,SAC5C,wCAAcH,EAAMI,MAApB,iBAAyCJ,EAAMK,YCK5CC,MAXf,SAAmBN,GACf,OACI,yBACIO,IAAKP,EAAMQ,KACXC,IAAKT,EAAMU,MACXC,QAAS,kBAAIX,EAAMY,YAAYZ,EAAMa,KACrCZ,UAAU,6C,eCqEPa,MAvEf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEiBF,mBAAS,CACrCG,KAAK,2BACLC,UAAW,KAJA,mBAENhB,EAFM,KAEGiB,EAFH,OAMaL,mBAAS,GANtB,mBAMNX,EANM,KAMCiB,EAND,OAOmBN,mBAAS,GAP5B,mBAONV,EAPM,KAOIiB,EAPJ,KASPV,EAAc,SAAAC,GAClB,GAAGG,EAAQO,SAASV,GAClBO,EAAW,CACTF,KAAK,2BACLC,UAAU,gBAEZE,EAAS,GACTJ,EAAW,QACP,CACJG,EAAW,CACTF,KAAK,yBACLC,UAAU,iBAEZ,IAAIK,EAAQR,EACZQ,EAAMC,KAAKZ,GAEX,IAAIa,EAAStB,EACbsB,IAEAT,EAAWO,GACRE,EAASrB,GACViB,EAAYI,GAEdL,EAASK,KAcb,OACE,6BACE,kBAAC,EAAD,CACEvB,QAASA,EAAQe,KACjBd,MAAOA,EACPC,SAAUA,EACVH,aAAcC,EAAQgB,YAExB,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,OAnBK,SAAAuB,GACxB,IAAI,IAAIG,EAAIH,EAAMI,OAAS,EAAGD,EAAI,EAAGA,IAAI,CACvC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,GAC/BM,EAAOT,EAAMG,GACjBH,EAAMG,GAAKH,EAAMK,GACjBL,EAAMK,GAAKI,EAEb,OAAOT,EAaAU,CAAkBC,GAAWC,KAAI,SAAAC,GAAS,OACzC,kBAAC,EAAD,CACE7B,KAAM6B,EAAU7B,KAChBE,MAAO2B,EAAU3B,MACjBG,GAAIwB,EAAUxB,GACdyB,IAAKD,EAAUxB,GACfD,YAAaA,WC/D3B2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dc1f231d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Navbar(props){\r\n    return (\r\n        <nav className=\"navbar bg-dark text-white mb-5\">\r\n            <span>Clicky Game</span>\r\n            <span className={props.messageColor}>{props.message}</span>\r\n            <span>Score: {props.score} | Top Score: {props.topScore}</span>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction Character(props){\r\n    return(\r\n        <img \r\n            alt={props.name}\r\n            src={props.image}\r\n            onClick={()=>props.handleClick(props.id)}\r\n            className=\"border bg-info col-12 col-md-6 col-lg-3\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default Character;","import React, { useState } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport Character from \"./components/Character\";\nimport './App.css';\nimport southpark from \"./southpark.json\"\n\nfunction App() {\n  const [clicked, setClicked] = useState([]);\n  const [message, setMessage] = useState({\n    text:\"Click an image to begin!\",\n    textColor: \"\"\n  });\n  const [score, setScore] = useState(0);\n  const [topScore, setTopScore] = useState(0);\n\n  const handleClick = id =>{\n    if(clicked.includes(id)){\n      setMessage({\n        text:\"You guessed incorrectly!\",\n        textColor:\"text-danger\"\n      });\n      setScore(0);\n      setClicked([]);\n    } else{\n      setMessage({\n        text:\"You guessed correctly!\",\n        textColor:\"text-success\"\n      });\n      let array = clicked;\n      array.push(id);\n\n      let number = score;\n      number++;\n\n      setClicked(array);\n      if(number > topScore){\n        setTopScore(number);\n      }\n      setScore(number);\n    }\n  }\n\n  const shuffleCharacters = array => {\n    for(let i = array.length - 1; i > 0; i--){\n      let j = Math.floor(Math.random() * i)\n      let temp = array[i]\n      array[i] = array[j]\n      array[j] = temp\n    }\n    return array;\n  }\n\n  return (\n    <div>\n      <Navbar \n        message={message.text}\n        score={score} \n        topScore={topScore}\n        messageColor={message.textColor}\n      />\n      <div className=\"container\">\n        <div className=\"row\">\n          {shuffleCharacters(southpark).map(character => (\n            <Character\n              name={character.name}\n              image={character.image}\n              id={character.id}\n              key={character.id}\n              handleClick={handleClick}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}